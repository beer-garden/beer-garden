name: Pull Request

on: pull_request

jobs:
  Linting:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./src/app

    strategy:
      matrix:
        python-version: ["3.11"]
        os: ["ubuntu-latest"]

    name: Linting OS ${{ matrix.os }} - Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Need to update if we support other OS's
      - name: Cache PIP Install
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-lint-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-lint

      - name: Run Linting (src/app)
        run: |
          pip install black flake8 isort
          make lint

      - name: Run Linting (test/integration)
        working-directory: ./test/integration
        run: |
          pip install black flake8 isort
          make lint

  PyTest:
    runs-on: ${{ matrix.os }}

    env:
      brewtils: "develop"

    defaults:
      run:
        working-directory: ./src/app

    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9","3.11"]
        os: ["ubuntu-latest"]

    name: PyTests OS ${{ matrix.os }} - Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Custom tag extractor to find Brewtils Branch
      - name: Find Brewtils Branch
        uses: TheBurchLog/body-env-tag-action@1.0
        with:
          tag: "brewtils:"
          env-variable: "brewtils"
          default-value: "develop"
          tag-position: -1

      # Used the hashtag here instead of slash allow for branches to have slashes in them
      - name: Update Brewtils Branch
        run: sed -i 's#brewtils@develop#brewtils@${{env.brewtils}}#g' requirements-dev.txt

      # Need to update if we support other OS's
      - name: Cache PIP Install
        uses: actions/cache@v2
        if: env.brewtils == 'develop'
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-install-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-install-

      - name: Make Deps
        run: make deps

      - name: Run Tests
        run: make test

  CodeCoverage:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./src/app

    strategy:
      matrix:
        python-version: ["3.11"]
        os: ["ubuntu-latest"]

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    name: Code Coverage OS ${{ matrix.os }} - Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Custom tag extractor to find Brewtils Branch
      - name: Find Brewtils Branch
        uses: TheBurchLog/body-env-tag-action@1.0
        with:
          tag: "brewtils:"
          env-variable: "brewtils"
          default-value: "develop"
          tag-position: -1

      # Used the hashtag here instead of slash allow for branches to have slashes in them
      - name: Update Brewtils Branch
        run: sed -i 's#brewtils@develop#brewtils@${{env.brewtils}}#g' requirements-dev.txt

      # Need to update if we support other OS's
      - name: Cache PIP Install
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-coverage-${{ hashFiles('**/setup.py') }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-coverage

      - name: Make Deps
        run: |
          make deps
          pip install pytest
          pip install pytest-cov

      - name: Generate coverage report
        continue-on-error: true
        run: |
          coverage run --source beer_garden -m pytest test --tb=no
          coverage report -m
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  SecurityCheck:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.11"]
        os: ["ubuntu-latest"]

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    name: Code Security Check OS ${{ matrix.os }} - Python ${{ matrix.python-version }}
    steps:
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make Deps
        run: |
          python -m pip install --upgrade pip
          pip install "importlib-metadata<5" bandit

      - uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
          path: ./old

      - uses: actions/checkout@v3
        with:
          path: ./new

      - name: Scan old security
        working-directory: ./old/src/app
        continue-on-error: true
        run: |
          bandit --format json -o ~/old_bandit.json -r beer_garden

      - name: Scan new security
        working-directory: ./new/src/app
        run: |
          bandit --baseline ~/old_bandit.json -r beer_garden

  Local-Plugin-Testing:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: ["3.7","3.8","3.9","3.10","3.11"]
        os: ["ubuntu-latest"]
      fail-fast: false

    name: Local Plugins - Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build Local Beer Garden Docker
        run: |
          python --version
          python -m pip install --upgrade pip
          pip install setuptools wheel
          make package
          make clean-python
          docker build -t bgio/beer-garden:unstable -f docker/Dockerfile.unstable --build-arg PYTHON_IMAGE=python:${{ matrix.python-version }}-alpine .
        working-directory: ./src/app

      - name: Update Docker Compose
        run: cp test/conf/docker-compose.yml docker/docker-compose/docker-compose.yml
        working-directory: ./

      - name: Checkout Local Plugins
        uses: actions/checkout@v2
        with:
          repository: beer-garden/example-plugins
          path: ./docker/docker-compose/data/localplugins

      - name: Verify Local Plugins
        run: ls ./docker/docker-compose/data/localplugins

      - name: Run Docker Beer Garden
        run: BG='unstable' docker-compose up -d beer-garden
        working-directory: ./docker/docker-compose

      - name: Wait for Beer Garden to start
        run: sleep 60s
        shell: bash

      - name: Grab logs from Beer-Garden
        run: BG='unstable' docker-compose logs --tail 100 beer-garden
        working-directory: ./docker/docker-compose

      - name: Check If Beer Garden is Operational
        uses: nick-invision/retry@v2
        with:
          timeout_seconds: 30
          max_attempts: 20
          retry_on: error
          retry_wait_seconds: 5
          command: curl http://localhost:2337/config

      - name: Grab logs from Beer-Garden
        run: BG='unstable' docker-compose logs --tail 100 beer-garden
        working-directory: ./docker/docker-compose

      # Custom tag extractor to find Brewtils Branch
      - name: Find Brewtils Branch
        uses: TheBurchLog/body-env-tag-action@1.0
        with:
          tag: "brewtils:"
          env-variable: "brewtils"
          default-value: "develop"
          tag-position: -1

      - name: Install Develop Version of Brewtils
        run: pip${{ matrix.python-version }} install -e git+https://github.com/beer-garden/brewtils@${{env.brewtils}}#egg=brewtils

      - name: Install Testing Dependencies
        run: pip${{ matrix.python-version }} install -r requirements.txt
        working-directory: ./test/integration

      - name: Test Plugins
        run: python${{ matrix.python-version }} -m pytest local_plugins/plugins/publisher_test.py
        working-directory: ./test/integration

      - name: Grab logs from Beer-Garden
        if: always()
        run: BG='unstable' docker-compose logs --tail 1000 beer-garden
        working-directory: ./docker/docker-compose

      - name: Shutdown Docker Containers
        run: docker-compose stop
        working-directory: ./docker/docker-compose
