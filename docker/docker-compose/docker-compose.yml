version: '3.5'

x-definitions: &env
    # IMPORTANT!!
    # Change this to whatever you want your garden name / namespace default to be
    BG_GARDEN_NAME: docker

    # IMPORTANT!!
    # Change this to support both local and remote plugins
    # Should be resolvable from inside and outside the docker network
    BG_PLUGIN_MQ_HOST: localhost

    # IMPORTANT!!
    # If you are connection to a Parent BG instance, toggle true
    BG_PARENT_HTTP_ENABLE: "false"

    # IMPORTANT !!
    # If you are connecting to a Parent BG instance, change this the resolvable DNS entry
    BG_PARENT_HTTP_HOST: localhost


services:
    beer-garden:
        image: bgio/beer-garden:3
        networks:
            - bg-network
        ports:
            - "2337:2337"
            - "2338:2338"
        volumes:
            - ./data/logging-config.yaml:/src/example_configs/logging-config.yaml
            - ./data/localplugins:/plugins
        environment:
            <<: *env

            # If you are running in Ubuntu, then you need to set the Timezone
            # We are actively investigating why this is
            #TZ: UTC

            # Point at the correct database
            BG_DB_HOST: mongodb
            BG_DB_NAME: beer_garden_v3

            # Point at the correct rabbit broker
            BG_MQ_HOST: rabbitmq
            BG_MQ_CONNECTIONS_ADMIN_USER: beer_garden
            BG_MQ_CONNECTIONS_ADMIN_PASSWORD: password
            BG_MQ_CONNECTIONS_MESSAGE_USER: beer_garden
            BG_MQ_CONNECTIONS_MESSAGE_PASSWORD: password

            # Enable stomp and point at the correct broker
            BG_ENTRY_STOMP_ENABLED: "false"
            BG_ENTRY_STOMP_HOST: activemq

            # We expose grafana for you, but you can change this to an
            # external grafana URL if you would like. It just adds a
            # link in our About section if it is defined.
            BG_METRICS_URL: http://localhost:3000
            BG_METRICS_PROMETHEUS_ENABLED: "false"
        depends_on:
            - mongodb
            - rabbitmq

    ui:
        image: bgio/ui:3
        networks:
            - bg-network
        ports:
            - "80:80"
              #- "443:443"
        environment:
            BEERGARDEN_HOST: "beer-garden"
            BEERGARDEN_PORT: "2337"
        depends_on:
            - beer-garden

    grafana:
        image: grafana/grafana:5.2.3
        ports:
            - "3000:3000"
        volumes:
            - ./data/grafana/provisioning:/etc/grafana/provisioning
            - ./data/grafana/dashboards:/var/lib/grafana/dashboards
        networks:
            - bg-network
        depends_on:
            - prometheus

    mongodb:
        image: mongo:4.2
        restart: always
        networks:
            - bg-network
        ports:
          - "27017:27017"
        volumes:
            - mongo-data:/data/db
            - mongo-config:/data/configdb

    prometheus:
        image: prom/prometheus:v2.3.2
        ports:
          - "9091:9090"
        networks:
            - bg-network
        volumes:
            - ./data/prometheus:/prometheus-data
        command:
            --config.file=/prometheus-data/prometheus.yml

    rabbitmq:
        image: rabbitmq:3.8-management-alpine
        restart: always
        hostname: rabbitmq
        networks:
            - bg-network
        environment:
            - RABBITMQ_DEFAULT_USER=beer_garden
            - RABBITMQ_DEFAULT_PASS=password
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - rabbitmq-home:/var/lib/rabbitmq

    activemq:
        image: vromero/activemq-artemis:2.16-alpine-latest
        restart: always
        environment:
            - ARTEMIS_USERNAME=beer_garden
            - ARTEMIS_PASSWORD=password
        networks:
            - bg-network
        ports:
          - "61613:61613"
          - "8161:8161"
        volumes:
            - ./data/activemq-config/etc-override-non-ssl:/var/lib/artemis/etc-override

networks:
    bg-network:
        driver: bridge
        name: bg-network

volumes:
    plugins:
    plugin-logs:
    mongo-data:
    mongo-config:
    rabbitmq-home:
